{"ast":null,"code":"var _jsxFileName = \"/Users/nitro/Desktop/React-Investment Calculator/src/Components/InvestmentItem.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InvestmentItem(props) {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.data.map(yearData => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.savingsEndOfYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.yearlyInterest\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.savingsEndOfYear - props.initialInvestment - yearData.yearlyContribution * yearData.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: props.initialInvestment + yearData.yearlyContribution * yearData.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, yearData.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = InvestmentItem;\nexport default InvestmentItem;\nvar _c;\n$RefreshReg$(_c, \"InvestmentItem\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InvestmentItem","props","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","children","className","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yearData","year","savingsEndOfYear","yearlyInterest","initialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["/Users/nitro/Desktop/React-Investment Calculator/src/Components/InvestmentItem.js"],"sourcesContent":["import React from \"react\";\nfunction InvestmentItem(props){\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    });\n    return(\n        <div>\n            <table className=\"result\">\n                <thead>\n                <tr>\n                    <th>Year</th>\n                    <th>Total Savings</th>\n                    <th>Interest (Year)</th>\n                    <th>Total Interest</th>\n                    <th>Invested Capital</th>\n                </tr>\n                </thead>\n                <tbody>\n                { props.data.map(yearData => (\n                    <tr key={yearData.year}>\n                        <td>{yearData.year}</td>\n                        <td>{ yearData.savingsEndOfYear }</td>\n                        <td>{ yearData.yearlyInterest }</td>\n                        <td>{yearData.savingsEndOfYear - props.initialInvestment - yearData.yearlyContribution * yearData.year}</td>\n                        <td>{props.initialInvestment + yearData.yearlyContribution * yearData.year}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default InvestmentItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}